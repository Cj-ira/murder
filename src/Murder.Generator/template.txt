/*             |￣￣￣￣￣￣\                                                                  *
 *             |    STOP   |                                                                 *
 *             |   EDITING |                                                                 *
 *             |    THIS   |                                                                 *
 *             |    FILE   |                                                                 *
 *             | ＿＿＿＿＿ /                                                                 *
 *             (\__/)  ||                                                                    *
 *             (•ㅅ•)  ||                                                                    *
 *             / 　 づ                                                                       *
 *             ￣￣￣                                                                         *
 * This code was generated by our own generator! In order to modify this, please run the     *
 * generator with whatever settings you want.                                                *
 *                                                                                           */

<using_namespaces>
using Bang;
using Bang.Entities;
using System.Collections.Immutable;

namespace <target_assembly>.Entities
{
    public enum ComponentType
    {
        <components_enum>
    }

    public enum MessageType
    {
        <messages_enum>
    }

    public static class EntityExtensions
    {
        #region Component "Get" methods!
        <components_get>
        #endregion
        
        #region Component "Has" checkers!
        <components_has>
        #endregion
        
        #region Component "TryGet" methods!
        <components_tryget>
        #endregion
        
        #region Component "Set" methods!
        <components_set>
        #endregion
        
        #region Component "Remove" methods!
        <components_remove>
        #endregion

        #region Message "Has" checkers!
        <messages_has>
        #endregion
    }

    public class LookupImplementation : ComponentsLookup
    {
        private static readonly ImmutableHashSet<int> _relativeComponents = new HashSet<int>()
        {
            <components_relative_set>
        }.ToImmutableHashSet();

        public override ImmutableHashSet<int> RelativeComponents => _relativeComponents;

        private static readonly ImmutableDictionary<Type, int> _componentsIndex = new Dictionary<Type, int>()
        {
            <components_type_to_index>
        }.ToImmutableDictionary();

        protected override ImmutableDictionary<Type, int> ComponentsIndex => _componentsIndex;

        private static readonly ImmutableDictionary<Type, int> _messagesIndex = new Dictionary<Type, int>()
        {
            <messages_type_to_index>
        }.ToImmutableDictionary();

        protected override ImmutableDictionary<Type, int> MessagesIndex => _messagesIndex;
    }
}